# Netlify configuration file

# Build settings
[build]
  # Base directory (where package.json is located)
  base = ""
  
  # Directory to use as the publishing directory
  publish = "build"
  
  # Default build command
  command = "CI= npm run build"
  
  # Functions directory
  functions = "functions"

# Redirects and headers

# API endpoints for admin functions
[[redirects]]
  from = "/api/users"
  to = "/.netlify/functions/users"
  status = 200
  force = true

[[redirects]]
  from = "/api/users/reset-password"
  to = "/.netlify/functions/reset-password"
  status = 200
  force = true

[[redirects]]
  from = "/api/users/bulk-delete"
  to = "/.netlify/functions/bulk-delete-users"
  status = 200
  force = true

[[redirects]]
  from = "/api/users/update"
  to = "/.netlify/functions/update-user"
  status = 200
  force = true

[[redirects]]
  from = "/api/users/*"
  to = "/.netlify/functions/delete-user/:splat"
  status = 200
  force = true

[[redirects]]
  # SPA redirect for client-side routing
  from = "/*"
  to = "/index.html"
  status = 200

# Headers to send with files
[[headers]]
  # Define headers for all files
  for = "/*"
    [headers.values]
    # Prevent site from being embedded in iframes (security)
    X-Frame-Options = "DENY"
    # Enable XSS protection
    X-XSS-Protection = "1; mode=block"
    # Prevent MIME type sniffing
    X-Content-Type-Options = "nosniff"    # Content Security Policy
    Content-Security-Policy = "default-src 'self'; script-src 'self' https://www.gstatic.com/ https://apis.google.com/ https://*.firebaseio.com https://www.googletagmanager.com 'unsafe-inline'; connect-src 'self' wss://*.firebaseio.com https://*.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https://*.googleapis.com https://*.gstatic.com https://lh3.googleusercontent.com https://drive.google.com; font-src 'self' https://fonts.gstatic.com;"

# Environment variable configuration
[build.environment]
  # Set Node.js version
  NODE_VERSION = "16"
  # CI=false prevents treating warnings as errors during build
  CI = "false"

# Form handling
[build.processing.html]
  pretty_urls = true
